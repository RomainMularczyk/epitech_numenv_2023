---
import { getCollection } from "astro:content";
import PageLayout from "@/layouts/Base";
import SubscribeButton from "@/components/SubscribeButton";
import Input from "@/components/subscribe/FormInput"
import Select from "@/components/subscribe/FormSelect"
export const prerender = true;

export async function getStaticPaths() {
  const programEntries = await getCollection("program");
  
  return programEntries.map(entry => ({
    params: { entry: entry.slug }, props: { entry }}
    ));
}

function isValidEmail(email: string) {
  var regex = /^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
  return regex.test(email);
}

const { entry } = Astro.props;
const meta = {
  title: entry.data.title,
  description: entry.data.description,
}
const errors = {
  firstname: "",
  lastname: "",
  email: "",
  institution: "",
  formation: "",
  other: ""
};

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const lastname = data.get("lastname");
    const firstname = data.get("firstname");
    const email = data.get("email");
    const institution = data.get("institution");
    const formation = data.get("formation");
    const other = data.get("other");
    
    if (typeof lastname !== "string" || lastname.length < 1) {
      errors.lastname += "Renseignez votre nom";
    }
    
    if (typeof firstname !== "string" || firstname.length < 1) {
      errors.firstname += "Renseignez votre prénom";
    }
    
    if (typeof email !== "string" || !isValidEmail(email)) {
      errors.email += "Email non valide";
    } else if (email.length <1) {
      errors.email += "Renseignez votre email";
    }
    
    if (institution.length < 1) {
      errors.institution += "Renseignez votre institution";
    }
    
    if (institution === "epitech" && formation.length < 1 ) {
      errors.formation += "Renseignez votre formation Epitech";
    }
       
    if (institution === "other" && other.length < 1 ) {
      errors.other += "Veuillez renseigner votre école ou institution";
    }
   
    const hasErrors = Object.values(errors).some(msg => msg)
    if (!hasErrors) {
      const body = {
        firstname,
        lastname,
        email,
        institution,
        formation,
        other
      };
      console.log("PAS D'ERREUR DONC ON ENVOIE LES DONNEES AU BACK", body);
    }
    
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}

const institutions: Array<{
	label: string;
	value: string;
}> = [
	{
		label: "Sélectionnez votre école ou institution",
		value: "",
	},
	{
		label: "Epitech",
		value: "epitech",
	},
	{
		label: "Epitech Digital School",
		value: "epitech_digital",
	},
	{
		label: "Web@cadémie",
		value: "web_academie",
	},
  {
    label: "e-artsup",
    value: "e_artsup"
	},
  {
    label: "ISEG",
    value: "iseg"
	},
  {
    label: "XP Esport & Gaming School",
    value: "xp"
	},
  {
    label: "Non-rattaché à une institution",
    value: "independant"
	},
  {
    label: "Autre institution",
    value: "other"
  }
];

const epitechFormations: Array<{
	label: string;
	value: string;
}> = [
  {
    value:"",
    label: "Sélectionnez votre formation Epitech"
  },
  {
    value:"premsc",
    label: "PreMsc"
  },
  {
    value:"msc",
    label: "Msc"
  },
  {
    value:"pge",
    label: "PGE"
  },
  {
    value:"pedago",
    label: "Equipe pédagogique"
  },
  {
    value:"admin",
    label: "Administration"
  },
];

---

<script>
    const institutionSelect = document.getElementById("institution");
    const formationField = document.getElementById("formation-field");
    const otherField = document.getElementById("other-field");
    const formationInput = document.getElementById("formation");
    const otherInput = document.getElementById("other");
    institutionSelect.addEventListener("change", () => {
      formationField.style.display = institutionSelect.value === "epitech" ? "block" : "none";
      formationInput.required = institutionSelect.value === "epitech" ? true : false;
      otherField.style.display = institutionSelect.value === "other" ? "block" : "none";
      otherInput.required = institutionSelect.value === "other" ? true : false;
    });
  </script>
<PageLayout meta={meta}>

  <form id="form" method="POST" class="subscribe-form">
    <Input required label="Nom" name="lastname" error={errors.lastname}/>
    <Input required label="Prénom" name="firstname" error={errors.firstname}/>
    <Input required label="Email" type="email" name="email" error={errors.email}/>
    <Select
      required
      label="École ou Institution"
      name="institution"
      id="institution"
      error={errors.institution}
      options={institutions}
      />
    <Select
      label="Formation Epitech"
      name="formation"
      divId="formation-field"
      id="formation"
      error={errors.formation}
      options={epitechFormations}
      style="display: none;"
      />
    <Input
      label="Institution, si autre"
      name="other"
      divId="other-field"
      id="other"
      error={errors.other}
      style="display: none;"
    />

    <button type="submit" class="subscribe-submit-btn">Je valide mon inscription</button>
  </form>

</PageLayout>